[{"C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\Componentes\\Reducers\\rootreducer.js":"4","C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\Pages\\login.js":"5","C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\Componentes\\Authentication.js":"6","C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\Pages\\dashboard.js":"7","C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\firebase.js":"8","C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\Pages\\Allcases.js":"9","C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\Pages\\healthDetails.js":"10"},{"size":1251,"mtime":1610633589514,"results":"11","hashOfConfig":"12"},{"size":909,"mtime":1611671555289,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":145,"mtime":1610626552325,"results":"15","hashOfConfig":"12"},{"size":3928,"mtime":1613498596568,"results":"16","hashOfConfig":"12"},{"size":834,"mtime":1613476266729,"results":"17","hashOfConfig":"12"},{"size":2651,"mtime":1613502640688,"results":"18","hashOfConfig":"12"},{"size":942,"mtime":1613475735640,"results":"19","hashOfConfig":"12"},{"size":7124,"mtime":1613502636739,"results":"20","hashOfConfig":"12"},{"size":6884,"mtime":1613512788406,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ybdk8z",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\index.js",[],["48","49"],"C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\App.js",["50","51"],"import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Login from \"./Pages/login\";\nimport Dashboad from \"./Pages/dashboard\";\nimport Authentication from \"./Componentes/Authentication\";\nimport Allcases from \"./Pages/Allcases\";\nimport HealthDetails from \"./Pages/healthDetails\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Authentication>\n          <Dashboad />\n        </Authentication>\n      </Route>\n      <Route exact path=\"/allcases\">\n        <Allcases />\n      </Route>\n      <Route exact path=\"/healthDetails\">\n        <HealthDetails />\n      </Route>\n      <Route exact path=\"/login\">\n        <Authentication nonAuthentication={true}>\n          <Login />\n        </Authentication>\n      </Route>\n      <Route path=\"*\" render={() => \"404 Not Found\"} />\n    </Switch>\n  );\n}\n\nexport default App;\n","C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\Componentes\\Reducers\\rootreducer.js",[],"C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\Pages\\login.js",["52","53","54","55","56","57","58","59"],"import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  CircularProgress,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { firestore, firebaseAuth } from \"../firebase\";\r\nimport logo from \"../Media/helthmonitor.png\";\r\n\r\nclass login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      show_progress: false,\r\n    };\r\n    this.handleChange = this.handleChange.bind();\r\n    this.login = this.login.bind();\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  login = () => {\r\n    let valid_data = true;\r\n    this.state.email_error = null;\r\n    this.state.password_error = null;\r\n    if (this.state.email === \"\") {\r\n      this.state.email_error = \"Required!\";\r\n      valid_data = false;\r\n    }\r\n    if (this.state.password === \"\") {\r\n      this.state.password_error = \"Required!\";\r\n      valid_data = false;\r\n    }\r\n    if (valid_data) {\r\n      this.state.show_progress = true;\r\n    }\r\n\r\n    this.setState({\r\n      update: true,\r\n    });\r\n    if (valid_data) {\r\n      //login\r\n      firestore\r\n        .collection(\"users\")\r\n        .where(\"email\", \"==\", this.state.email)\r\n        .where(\"isAdmin\", \"==\", true)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          if (!querySnapshot.empty) {\r\n            //login\r\n            firebaseAuth\r\n              .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n              .then((res) => {\r\n                console.log(\"true\");\r\n                this.props.history.replace(\"/\");\r\n              })\r\n              .catch((err) => {\r\n                if (err.code === \"auth/wrong-password\") {\r\n                  this.state.password_error = \"Incorrect Password!\";\r\n                }\r\n\r\n                this.setState({\r\n                  show_progress: false,\r\n                });\r\n              });\r\n          } else {\r\n            this.state.email_error = \"Not Allowd\";\r\n            this.setState({\r\n              show_progress: false,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"sm\">\r\n        <Box\r\n          bgcolor=\"white\"\r\n          textAlign=\"center\"\r\n          p=\"24px\"\r\n          boxShadow=\"2\"\r\n          borderRadius=\"12px\"\r\n          mt=\"50px\"\r\n        >\r\n          <img src={logo} height=\"50px\" />\r\n          <Typography color=\"textSecondary\"> ADMIN</Typography>\r\n          <TextField\r\n            label=\"Email\"\r\n            id=\"outlined-size-small\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            name=\"email\"\r\n            error={this.state.email_error != null}\r\n            helperText={this.state.email_error}\r\n            onChange={this.handleChange}\r\n            margin=\"normal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            id=\"outlined-size-small\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"normal\"\r\n            textAlign=\"center\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            error={this.state.password_error != null}\r\n            helperText={this.state.password_error}\r\n            onChange={this.handleChange}\r\n            color=\"secondary\"\r\n          />\r\n          <br />\r\n          <br />\r\n          {this.state.show_progress ? (\r\n            <CircularProgress size={25} color=\"primary\" thickness={4} />\r\n          ) : null}\r\n          <br />\r\n          <br />\r\n          <Button\r\n            disableElevation\r\n            fullWidthg\r\n            onClick={this.login}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            LOGIN\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default login;\r\n","C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\Componentes\\Authentication.js",[],"C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\Pages\\dashboard.js",["60","61","62","63","64","65","66","67","68"],"import { Typography, Button } from \"@material-ui/core\";\r\nimport styles from \"./mystyle.module.css\";\r\nimport { DateRangePicker } from \"react-dates\";\r\nimport \"react-dates/initialize\";\r\nimport \"react-dates/lib/css/_datepicker.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Allcases from \"./Allcases\";\r\nimport { useHistory, NavLink } from \"react-router-dom\";\r\nimport dateformat from \"dateformat\";\r\nimport Allcasess from \"./Allcases\";\r\nimport firebase from \"../firebase\";\r\n\r\nimport React, { Component, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let date = new Date();\r\n    this.state = {\r\n      studentslist: [],\r\n      sDate: date,\r\n      pres: [],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.sDate > new Date()) {\r\n      alert(\"date should not exide than today\");\r\n      this.setState({ sDate: new Date() });\r\n    }\r\n    sessionStorage.setItem(\r\n      \"date\",\r\n      dateformat(this.state.sDate.toString(), \"dd-mm-yyyy\")\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"jumbotron text-center bg-warning\">\r\n          <h3>TATA CUNSULTANCY SERVICES</h3>\r\n          <h2>welcome admin</h2>\r\n\r\n          <DatePicker\r\n            className={styles.datep}\r\n            selected={this.state.sDate}\r\n            onChange={(date) => this.setState({ sDate: date })}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <div class=\"jumbotron text-center bg-red\">\r\n            <NavLink\r\n              class=\"btn btn-danger btn-lg\"\r\n              onClick={() => sessionStorage.setItem(\"button\", \"critical\")}\r\n              to={{\r\n                pathname: \"/allcases\",\r\n\r\n                aboutProps: {\r\n                  date: dateformat(this.state.sDate.toString(), \"dd-mm-yyyy\"),\r\n                  button: \"critical\",\r\n                },\r\n              }}\r\n            >\r\n              Critical Cases\r\n            </NavLink>\r\n            <p> </p>\r\n            <NavLink\r\n              class=\"btn btn-primary btn-lg\"\r\n              onClick={() => sessionStorage.setItem(\"button\", \"all\")}\r\n              to={{\r\n                pathname: \"/allcases\",\r\n                aboutProps: {\r\n                  date: dateformat(this.state.sDate, \"dd-mm-yyyy\"),\r\n                  button: \"all\",\r\n                  // allusers: array2,\r\n                },\r\n              }}\r\n            >\r\n              All Cases\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default dashboard;\r\n","C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\firebase.js",[],"C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\Pages\\Allcases.js",["69","70","71","72","73","74","75","76","77","78","79","80","81","82"],"import React, { Component } from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport { Typography, CircularProgress, Box } from \"@material-ui/core\";\r\nimport { useHistory, NavLink } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport css from \"./mystyle.module.css\";\r\n\r\nclass Allcases extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let date = \"ll\";\r\n\r\n    this.state = {\r\n      studentslist: [],\r\n      loaded: false,\r\n      normal: [],\r\n      critical: [],\r\n      show_progress: true,\r\n    };\r\n    function Allcases(params) {\r\n      let location = useLocation();\r\n      date = location.allProps.date;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase\r\n      .database()\r\n      .ref()\r\n      .child(\"hitman\")\r\n\r\n      .on(\"value\", (snapshot) => {\r\n        let studentlist = [];\r\n        snapshot.forEach((snap) => {\r\n          // snap.val() is the dictionary with all your keys/values from the 'students-list' path\r\n          studentlist.push(snap.val());\r\n        });\r\n        this.setState({ studentslist: studentlist });\r\n\r\n        if (this.state.studentslist != null) {\r\n          this.setState({ loaded: true });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let countall = 0;\r\n    let countcrt = 0;\r\n    let count = 0;\r\n    return (\r\n      <div className=\"MainDiv\">\r\n        <div class=\"jumbotron text-center bg-sky\">\r\n          <h3>{sessionStorage.getItem(\"date\")}</h3>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <table id=\"example\" class=\"display table\">\r\n            <thead class=\"thead-dark\">\r\n              <tr>\r\n                <th>EID</th>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th>Remark</th>\r\n                <th>Inspect</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {this.state.loaded\r\n                ? this.state.studentslist.map((data, key) => {\r\n                    count++;\r\n                    if (\r\n                      sessionStorage.getItem(\"button\") == \"all\" &&\r\n                      this.state.studentslist != null\r\n                    ) {\r\n                      countall++;\r\n                      return (\r\n                        <tr>\r\n                          <td>{data[\"personal\"][\"EID\"]}</td>\r\n                          <td>{data[\"personal\"][\"name\"]}</td>\r\n                          <td>{data[\"personal\"][\"email\"]}</td>\r\n                          <td>{data[\"personal\"][\"phone\"]}</td>\r\n\r\n                          {data[\"personal\"][\"remark\"] == \"normal\" ? (\r\n                            <td>{data[\"personal\"][\"remark\"]}</td>\r\n                          ) : (\r\n                            <td className={css.redcolor}>\r\n                              {data[\"personal\"][\"remark\"]}\r\n                            </td>\r\n                          )}\r\n\r\n                          <NavLink\r\n                            onClick={() =>\r\n                              sessionStorage.setItem(\r\n                                \"uid\",\r\n                                data[\"personal\"][\"uid\"],\r\n                                sessionStorage.setItem(\r\n                                  \"info\",\r\n                                  JSON.stringify(data[\"personal\"])\r\n                                )\r\n                              )\r\n                            }\r\n                            to={{\r\n                              pathname: \"/healthDetails\",\r\n                              allProps: {\r\n                                personal: data[\"personal\"],\r\n                                health: data[\"health\"],\r\n                              },\r\n                            }}\r\n                          >\r\n                            <td>View</td>\r\n                          </NavLink>\r\n                        </tr>\r\n                      );\r\n                    }\r\n                    if (\r\n                      data[\"personal\"][\"remark\"] == \"critical\" &&\r\n                      sessionStorage.getItem(\"button\") == \"critical\" &&\r\n                      this.state.studentslist != null\r\n                    ) {\r\n                      countcrt++;\r\n                      return (\r\n                        <tr>\r\n                          <td>{data[\"personal\"][\"name\"]}</td>\r\n                          <td>{data[\"personal\"][\"email\"]}</td>\r\n                          <td>{data[\"personal\"][\"email\"]}</td>\r\n                          <td>{data[\"personal\"][\"phone\"]}</td>\r\n                          <td className={css.redcolor}>\r\n                            {data[\"personal\"][\"remark\"]}\r\n                          </td>\r\n                          <NavLink\r\n                            onClick={\r\n                              (() =>\r\n                                sessionStorage.setItem(\r\n                                  \"wifi\",\r\n                                  data[\"personal\"][\"wifi\"]\r\n                                ),\r\n                              sessionStorage.setItem(\r\n                                \"info\",\r\n                                JSON.stringify(data[\"personal\"])\r\n                              ))\r\n                            }\r\n                            to={{\r\n                              pathname: \"/healthDetails\",\r\n                              allProps: {\r\n                                personal: data[\"personal\"],\r\n                                health: data[\"health\"],\r\n                              },\r\n                            }}\r\n                          >\r\n                            <td>View</td>\r\n                          </NavLink>\r\n                        </tr>\r\n                      );\r\n                    }\r\n                    if (\r\n                      sessionStorage.getItem(\"button\") == \"critical\" &&\r\n                      countcrt == 0 &&\r\n                      count == this.state.studentslist.length\r\n                    ) {\r\n                      countcrt++;\r\n                      return (\r\n                        <div>\r\n                          <h3 class=\"jumbotron text-center bg-warning\">\r\n                            All Are good :) No Critical Data Found\r\n                          </h3>\r\n                        </div>\r\n                      );\r\n                    }\r\n                    if (\r\n                      sessionStorage.getItem(\"button\") == \"all\" &&\r\n                      countall == 0\r\n                    ) {\r\n                      countall++;\r\n                      return (\r\n                        <div>\r\n                          <h3 class=\"jumbotron text-center bg-warning\">\r\n                            Data Is Not Available :)\r\n                          </h3>\r\n                        </div>\r\n                      );\r\n                    }\r\n                  })\r\n                : null}\r\n            </tbody>\r\n          </table>\r\n          <Box class=\"d-flex justify-content-center\">\r\n            {!this.state.loaded ? (\r\n              <CircularProgress size={50} color=\"primary\" thickness={4} />\r\n            ) : null}\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Allcases;\r\n","C:\\Users\\HP\\Desktop\\NODEmcu\\nodemcu\\src\\Pages\\healthDetails.js",["83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114"],"import React from \"react\";\r\nimport firebase from \"../firebase\";\r\n\r\n//Calling Bootstrap 4.5 css\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport css from \"./mystyle.module.css\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\n//Calling Firebase config setting to call the data\r\n\r\nclass healthDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { studentslist: [], encrypt_value: [], encrypt_key: [] };\r\n    this.decrypt = this.decrypt.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id =\r\n      \"hitman/\" +\r\n      sessionStorage.getItem(\"uid\") +\r\n      \"/health/\" +\r\n      sessionStorage.getItem(\"date\");\r\n\r\n    firebase\r\n      .database()\r\n      .ref(id)\r\n      .orderByKey()\r\n      .on(\"value\", (snapshot) => {\r\n        let studentlist = [];\r\n        snapshot.forEach((snap) => {\r\n          // snap.val() is the dictionary with all your keys/values from the 'students-list' path\r\n          studentlist.push(snap.val());\r\n        });\r\n        this.setState({ studentslist: studentlist });\r\n        console.log(sessionStorage.getItem(\"info\"));\r\n      });\r\n  }\r\n  decrypt(props) {\r\n    var integer_value = parseInt(props);\r\n    var key = integer_value % 10;\r\n    var value = parseInt(integer_value / 100);\r\n\r\n    switch (key) {\r\n      case 0:\r\n        for (var num = 5; num < 500; num++) {\r\n          if (num * num - num - 10 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      case 1:\r\n        for (var num = 5; num < 500; num++) {\r\n          if (num * num - num * 2 - 1 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      case 2:\r\n        for (var num = 0; num < 5000; num++) {\r\n          if (num * num - num - 1 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      case 3:\r\n        for (var num = 0; num < 5000; num++) {\r\n          if (num * 3 * num - num - 1 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      case 4:\r\n        for (var num = 0; num < 5000; num++) {\r\n          if (100 * num - num - 1 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      case 5:\r\n        for (var num = 0; num < 5000; num++) {\r\n          if (num * num - num + 86 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      case 6:\r\n        for (var num = 5; num < 500; num++) {\r\n          if (num * num - num - 1 + num * 3 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      case 7:\r\n        for (var num = 5; num < 500; num++) {\r\n          if (num * num - num - 2 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      case 8:\r\n        for (var num = 5; num < 500; num++) {\r\n          if (num * num - num - 3 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      case 9:\r\n        for (var num = 5; num < 500; num++) {\r\n          if (num * num - num - 4 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      default:\r\n        return value.toString();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const obj = JSON.parse(sessionStorage.getItem(\"info\"));\r\n    console.log(obj);\r\n    var bp_array;\r\n    var value_ = \"\";\r\n\r\n    return (\r\n      <div className=\"MainDiv\">\r\n        <br></br>\r\n        <Box class=\"d-flex justify-content-around\">\r\n          <img\r\n            style={{ width: 150 }}\r\n            src={obj.profile_image}\r\n            alt=\"...\"\r\n            class=\"rounded float-left\"\r\n          ></img>\r\n\r\n          <Box>\r\n            <div class=\"d-flex flex-column\">\r\n              <div class=\"p-2\">\r\n                <div class=\"font-weight-bold\">EID : {obj.EID}</div>{\" \"}\r\n              </div>\r\n              <div class=\"p-2\">Name : {obj.name}</div>\r\n              <div class=\"p-2\">Email : {obj.email}</div>\r\n              <div class=\"p-2\">Phone : {obj.phone}</div>\r\n            </div>\r\n          </Box>\r\n          <Box>\r\n            <div class=\"d-flex flex-column\">\r\n              <div class=\"p-2\">Blood Group : {obj.blood_group}</div>\r\n              <div class=\"p-2\">Birth Date : {obj.birth_date}</div>\r\n              <div class=\"p-2\">Weight : {obj.weight} kgs</div>\r\n              <div class=\"p-2\">Height : {obj.height} cm</div>\r\n            </div>\r\n          </Box>\r\n        </Box>\r\n\r\n        <div class=\"d-flex justify-content-around\">\r\n          <p class=\"font-weight-bold\">\r\n            {\" \"}\r\n            {\"Analysis for \" + sessionStorage.getItem(\"date\")}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <table id=\"example\" class=\"display table\">\r\n            <thead class=\"thead-dark\">\r\n              <tr>\r\n                <th>Time</th>\r\n                <th>Temperature (Celsius)</th>\r\n                <th>Blood Pressure (mmHg)</th>\r\n                <th>Sugar Level (mg/dl)</th>\r\n                <th>Heamoglobin (g/dl)</th>\r\n                <th>Heart Rate (BPM)</th>\r\n                <th>Conclusion</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.studentslist.reverse().map((data) => {\r\n                {\r\n                  bp_array = data.blood_pressure.split(\"/\");\r\n                }\r\n                return data.remark == \"normal\" ? (\r\n                  <tr>\r\n                    {}\r\n                    <td>{data.time}</td>\r\n                    <td>{this.decrypt(data.temp)}</td>\r\n                    <td>\r\n                      {(bp_array = data.blood_pressure.split(\"/\"))}\r\n                      {this.decrypt(bp_array[0])}/{this.decrypt(bp_array[1])}\r\n                    </td>\r\n                    <td>{this.decrypt(data.sugar)}</td>\r\n                    <td>{this.decrypt(data.hb)}</td>\r\n                    <td>{this.decrypt(data.bps)}</td>\r\n                    <td>{data.conclusion}</td>\r\n                  </tr>\r\n                ) : (\r\n                  <tr className={css.redcolor}>\r\n                    <td>{data.time}</td>\r\n                    <td>{this.decrypt(data.temp)}</td>\r\n                    <td>\r\n                      {this.decrypt(bp_array[0])}/{this.decrypt(bp_array[1])}\r\n                    </td>\r\n                    <td>{this.decrypt(data.sugar)}</td>\r\n                    <td>{this.decrypt(data.hb)}</td>\r\n                    <td>{this.decrypt(data.bps)}</td>\r\n                    <td>{data.conclusion}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default healthDetails;\r\n",{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":23},{"ruleId":"119","severity":1,"message":"123","line":3,"column":40,"nodeType":"121","messageId":"122","endLine":3,"endColumn":48},{"ruleId":"124","severity":1,"message":"125","line":32,"column":5,"nodeType":"126","endLine":32,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":33,"column":5,"nodeType":"126","endLine":33,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":35,"column":7,"nodeType":"126","endLine":35,"endColumn":17},{"ruleId":"124","severity":1,"message":"125","line":39,"column":7,"nodeType":"126","endLine":39,"endColumn":17},{"ruleId":"124","severity":1,"message":"125","line":43,"column":7,"nodeType":"126","endLine":43,"endColumn":17},{"ruleId":"124","severity":1,"message":"125","line":67,"column":19,"nodeType":"126","endLine":67,"endColumn":29},{"ruleId":"124","severity":1,"message":"125","line":75,"column":13,"nodeType":"126","endLine":75,"endColumn":23},{"ruleId":"127","severity":1,"message":"128","line":95,"column":11,"nodeType":"129","endLine":95,"endColumn":43},{"ruleId":"119","severity":1,"message":"130","line":1,"column":10,"nodeType":"121","messageId":"122","endLine":1,"endColumn":20},{"ruleId":"119","severity":1,"message":"131","line":1,"column":22,"nodeType":"121","messageId":"122","endLine":1,"endColumn":28},{"ruleId":"119","severity":1,"message":"132","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":25},{"ruleId":"119","severity":1,"message":"133","line":11,"column":8,"nodeType":"121","messageId":"122","endLine":11,"endColumn":16},{"ruleId":"119","severity":1,"message":"134","line":12,"column":10,"nodeType":"121","messageId":"122","endLine":12,"endColumn":20},{"ruleId":"119","severity":1,"message":"135","line":14,"column":8,"nodeType":"121","messageId":"122","endLine":14,"endColumn":17},{"ruleId":"119","severity":1,"message":"136","line":15,"column":8,"nodeType":"121","messageId":"122","endLine":15,"endColumn":16},{"ruleId":"119","severity":1,"message":"137","line":17,"column":28,"nodeType":"121","messageId":"122","endLine":17,"endColumn":36},{"ruleId":"119","severity":1,"message":"138","line":18,"column":8,"nodeType":"121","messageId":"122","endLine":18,"endColumn":17},{"ruleId":"119","severity":1,"message":"130","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":20},{"ruleId":"119","severity":1,"message":"134","line":4,"column":10,"nodeType":"121","messageId":"122","endLine":4,"endColumn":20},{"ruleId":"119","severity":1,"message":"133","line":20,"column":14,"nodeType":"121","messageId":"122","endLine":20,"endColumn":22},{"ruleId":"119","severity":1,"message":"139","line":22,"column":7,"nodeType":"121","messageId":"122","endLine":22,"endColumn":11},{"ruleId":"140","severity":1,"message":"141","line":71,"column":59,"nodeType":"142","messageId":"143","endLine":71,"endColumn":61},{"ruleId":"144","severity":1,"message":"145","line":74,"column":56,"nodeType":"146","messageId":"147","endLine":74,"endColumn":58},{"ruleId":"144","severity":1,"message":"145","line":85,"column":55,"nodeType":"146","messageId":"147","endLine":85,"endColumn":57},{"ruleId":"144","severity":1,"message":"145","line":118,"column":50,"nodeType":"146","messageId":"147","endLine":118,"endColumn":52},{"ruleId":"144","severity":1,"message":"145","line":119,"column":56,"nodeType":"146","messageId":"147","endLine":119,"endColumn":58},{"ruleId":"144","severity":1,"message":"145","line":158,"column":56,"nodeType":"146","messageId":"147","endLine":158,"endColumn":58},{"ruleId":"144","severity":1,"message":"145","line":159,"column":32,"nodeType":"146","messageId":"147","endLine":159,"endColumn":34},{"ruleId":"144","severity":1,"message":"145","line":160,"column":29,"nodeType":"146","messageId":"147","endLine":160,"endColumn":31},{"ruleId":"144","severity":1,"message":"145","line":172,"column":56,"nodeType":"146","messageId":"147","endLine":172,"endColumn":58},{"ruleId":"144","severity":1,"message":"145","line":173,"column":32,"nodeType":"146","messageId":"147","endLine":173,"endColumn":34},{"ruleId":"144","severity":1,"message":"145","line":48,"column":36,"nodeType":"146","messageId":"147","endLine":48,"endColumn":38},{"ruleId":"148","severity":1,"message":"149","line":50,"column":13,"nodeType":"150","messageId":"151","endLine":50,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":56,"column":18,"nodeType":"121","messageId":"154","endLine":56,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":57,"column":39,"nodeType":"146","messageId":"147","endLine":57,"endColumn":41},{"ruleId":"148","severity":1,"message":"149","line":59,"column":13,"nodeType":"150","messageId":"151","endLine":59,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":65,"column":18,"nodeType":"121","messageId":"154","endLine":65,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":66,"column":35,"nodeType":"146","messageId":"147","endLine":66,"endColumn":37},{"ruleId":"148","severity":1,"message":"149","line":68,"column":13,"nodeType":"150","messageId":"151","endLine":68,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":74,"column":18,"nodeType":"121","messageId":"154","endLine":74,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":75,"column":39,"nodeType":"146","messageId":"147","endLine":75,"endColumn":41},{"ruleId":"148","severity":1,"message":"149","line":77,"column":13,"nodeType":"150","messageId":"151","endLine":77,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":83,"column":18,"nodeType":"121","messageId":"154","endLine":83,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":84,"column":35,"nodeType":"146","messageId":"147","endLine":84,"endColumn":37},{"ruleId":"148","severity":1,"message":"149","line":86,"column":13,"nodeType":"150","messageId":"151","endLine":86,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":92,"column":18,"nodeType":"121","messageId":"154","endLine":92,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":93,"column":36,"nodeType":"146","messageId":"147","endLine":93,"endColumn":38},{"ruleId":"148","severity":1,"message":"149","line":95,"column":13,"nodeType":"150","messageId":"151","endLine":95,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":101,"column":18,"nodeType":"121","messageId":"154","endLine":101,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":102,"column":45,"nodeType":"146","messageId":"147","endLine":102,"endColumn":47},{"ruleId":"148","severity":1,"message":"149","line":104,"column":13,"nodeType":"150","messageId":"151","endLine":104,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":110,"column":18,"nodeType":"121","messageId":"154","endLine":110,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":111,"column":35,"nodeType":"146","messageId":"147","endLine":111,"endColumn":37},{"ruleId":"148","severity":1,"message":"149","line":113,"column":13,"nodeType":"150","messageId":"151","endLine":113,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":119,"column":18,"nodeType":"121","messageId":"154","endLine":119,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":120,"column":35,"nodeType":"146","messageId":"147","endLine":120,"endColumn":37},{"ruleId":"148","severity":1,"message":"149","line":122,"column":13,"nodeType":"150","messageId":"151","endLine":122,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":128,"column":18,"nodeType":"121","messageId":"154","endLine":128,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":129,"column":35,"nodeType":"146","messageId":"147","endLine":129,"endColumn":37},{"ruleId":"148","severity":1,"message":"149","line":131,"column":13,"nodeType":"150","messageId":"151","endLine":131,"endColumn":19},{"ruleId":"119","severity":1,"message":"155","line":145,"column":9,"nodeType":"121","messageId":"122","endLine":145,"endColumn":15},{"ruleId":"156","severity":1,"message":"157","line":200,"column":17,"nodeType":"158","messageId":"159","endLine":202,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":203,"column":36,"nodeType":"146","messageId":"147","endLine":203,"endColumn":38},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Typography' is defined but never used.","'Button' is defined but never used.","'DateRangePicker' is defined but never used.","'Allcases' is defined but never used.","'useHistory' is defined but never used.","'Allcasess' is defined but never used.","'firebase' is defined but never used.","'useState' is defined but never used.","'PropTypes' is defined but never used.","'date' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-redeclare","'num' is already defined.","redeclared","'value_' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]