{"version":3,"sources":["Media/helthmonitor.png","firebase.js","Pages/login.js","Pages/Allcases.js","Pages/dashboard.js","Componentes/Authentication.js","Pages/healthDetails.js","App.js","reportWebVitals.js","Componentes/Reducers/rootreducer.js","index.js","Pages/mystyle.module.css"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseAuth","auth","firestore","database","storage","ref","login","props","handleChange","e","setState","target","name","value","valid_data","state","email_error","password_error","email","password","show_progress","update","collection","where","get","then","querySnapshot","empty","signInWithEmailAndPassword","res","history","replace","catch","err","code","bind","Container","maxWidth","Box","bgcolor","textAlign","p","boxShadow","borderRadius","mt","src","logo","height","Typography","color","TextField","label","id","fullWidth","variant","size","error","this","helperText","onChange","margin","type","CircularProgress","thickness","Button","disableElevation","fullWidthg","onClick","Component","Allcases","studentslist","loaded","normal","critical","child","on","snapshot","studentlist","forEach","snap","push","val","countall","countcrt","count","className","class","sessionStorage","getItem","map","data","key","css","redcolor","setItem","JSON","stringify","to","pathname","allProps","personal","health","length","dashboard","date","Date","sDate","pres","alert","dateformat","toString","styles","datep","selected","aboutProps","button","signOut","Authentication","useState","loggedin","setloggedin","onAuthStateChanged","user","nonAuthentication","children","healthDetails","encrypt_value","encrypt_key","decrypt","orderByKey","console","log","integer_value","parseInt","num","bp_array","obj","parse","style","width","profile_image","alt","EID","phone","blood_group","birth_date","weight","reverse","blood_pressure","split","remark","time","temp","sugar","hb","bps","conclusion","React","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootreducer","combineReducers","DEFAULT","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","theme","createMuiTheme","palette","primary","pink","secondary","blueGrey","ReactDOM","render","ThemeProvider","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7588553f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/helthmonitor.9d8e605e.png\";","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from \"firebase/app\";\r\n\r\n// Add the Firebase services that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBVCE5aRyY5iX33WE7XgSKlz5A2qssVldE\",\r\n  authDomain: \"nodemcu-6692b.firebaseapp.com\",\r\n  databaseURL: \"https://nodemcu-6692b-default-rtdb.firebaseio.com\",\r\n  projectId: \"nodemcu-6692b\",\r\n  storageBucket: \"nodemcu-6692b.appspot.com\",\r\n  messagingSenderId: \"90545243244\",\r\n  appId: \"1:90545243244:web:146112c91167720fd88449\",\r\n  measurementId: \"G-649L2N0YLB\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseAuth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const database = firebase.database();\r\n\r\nexport const storageRef = firebase.storage().ref();\r\nexport default firebase;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  CircularProgress,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport logo from \"../Media/helthmonitor.png\";\r\nimport { firestore, firebaseAuth } from \"../firebase\";\r\n\r\nclass login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      show_progress: false,\r\n    };\r\n    this.handleChange = this.handleChange.bind();\r\n    this.login = this.login.bind();\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  login = () => {\r\n    let valid_data = true;\r\n    this.state.email_error = null;\r\n    this.state.password_error = null;\r\n    if (this.state.email === \"\") {\r\n      this.state.email_error = \"Required!\";\r\n      valid_data = false;\r\n    }\r\n    if (this.state.password === \"\") {\r\n      this.state.password_error = \"Required!\";\r\n      valid_data = false;\r\n    }\r\n    if (valid_data) {\r\n      this.state.show_progress = true;\r\n    }\r\n\r\n    this.setState({\r\n      update: true,\r\n    });\r\n    if (valid_data) {\r\n      //login\r\n      firestore\r\n        .collection(\"users\")\r\n        .where(\"email\", \"==\", this.state.email)\r\n        .where(\"isAdmin\", \"==\", true)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          if (!querySnapshot.empty) {\r\n            //login\r\n            firebaseAuth\r\n              .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n              .then((res) => {\r\n                this.props.history.replace(\"/\");\r\n              })\r\n              .catch((err) => {\r\n                if (err.code === \"auth/wrong-password\") {\r\n                  this.state.password_error = \"Incorrect Password!\";\r\n                }\r\n\r\n                this.setState({\r\n                  show_progress: false,\r\n                });\r\n              });\r\n          } else {\r\n            this.state.email_error = \"Not Allowd\";\r\n            this.setState({\r\n              show_progress: false,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"sm\">\r\n        <Box\r\n          bgcolor=\"white\"\r\n          textAlign=\"center\"\r\n          p=\"24px\"\r\n          boxShadow=\"2\"\r\n          borderRadius=\"12px\"\r\n          mt=\"50px\"\r\n        >\r\n          <img src={logo} height=\"50px\" />\r\n          <Typography color=\"textSecondary\"> ADMIN</Typography>\r\n          <TextField\r\n            label=\"Email\"\r\n            id=\"outlined-size-small\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            name=\"email\"\r\n            error={this.state.email_error != null}\r\n            helperText={this.state.email_error}\r\n            onChange={this.handleChange}\r\n            margin=\"normal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            id=\"outlined-size-small\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"normal\"\r\n            textAlign=\"center\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            error={this.state.password_error != null}\r\n            helperText={this.state.password_error}\r\n            onChange={this.handleChange}\r\n            color=\"secondary\"\r\n          />\r\n          <br />\r\n          <br />\r\n          {this.state.show_progress ? (\r\n            <CircularProgress size={25} color=\"primary\" thickness={4} />\r\n          ) : null}\r\n          <br />\r\n          <br />\r\n          <Button\r\n            disableElevation\r\n            fullWidthg\r\n            onClick={this.login}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            LOGIN\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default login;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport { Typography, CircularProgress, Box } from \"@material-ui/core\";\r\nimport { useHistory, NavLink } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport css from \"./mystyle.module.css\";\r\n\r\nclass Allcases extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let date = \"ll\";\r\n\r\n    this.state = {\r\n      studentslist: [],\r\n      loaded: false,\r\n      normal: [],\r\n      critical: [],\r\n      show_progress: true,\r\n    };\r\n    function Allcases(params) {\r\n      let location = useLocation();\r\n      date = location.allProps.date;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase\r\n      .database()\r\n      .ref()\r\n      .child(\"hitman\")\r\n\r\n      .on(\"value\", (snapshot) => {\r\n        let studentlist = [];\r\n        snapshot.forEach((snap) => {\r\n          // snap.val() is the dictionary with all your keys/values from the 'students-list' path\r\n          studentlist.push(snap.val());\r\n        });\r\n        this.setState({ studentslist: studentlist });\r\n\r\n        if (this.state.studentslist != null) {\r\n          this.setState({ loaded: true });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let countall = 0;\r\n    let countcrt = 0;\r\n    let count = 0;\r\n    return (\r\n      <div className=\"MainDiv\">\r\n        <div class=\"jumbotron text-center bg-sky\">\r\n          <h3>{sessionStorage.getItem(\"date\")}</h3>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <table id=\"example\" class=\"display table\">\r\n            <thead class=\"thead-dark\">\r\n              <tr>\r\n                <th>EID</th>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th>Remark</th>\r\n                <th>Inspect</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {this.state.loaded\r\n                ? this.state.studentslist.map((data, key) => {\r\n                    count++;\r\n                    if (\r\n                      sessionStorage.getItem(\"button\") == \"all\" &&\r\n                      this.state.studentslist != null\r\n                    ) {\r\n                      countall++;\r\n                      return (\r\n                        <tr>\r\n                          <td>{data[\"personal\"][\"EID\"]}</td>\r\n                          <td>{data[\"personal\"][\"name\"]}</td>\r\n                          <td>{data[\"personal\"][\"email\"]}</td>\r\n                          <td>{data[\"personal\"][\"phone\"]}</td>\r\n\r\n                          {data[\"personal\"][\"remark\"] == \"normal\" ? (\r\n                            <td>{data[\"personal\"][\"remark\"]}</td>\r\n                          ) : (\r\n                            <td className={css.redcolor}>\r\n                              {data[\"personal\"][\"remark\"]}\r\n                            </td>\r\n                          )}\r\n\r\n                          <NavLink\r\n                            onClick={() =>\r\n                              sessionStorage.setItem(\r\n                                \"uid\",\r\n                                data[\"personal\"][\"uid\"],\r\n                                sessionStorage.setItem(\r\n                                  \"info\",\r\n                                  JSON.stringify(data[\"personal\"])\r\n                                )\r\n                              )\r\n                            }\r\n                            to={{\r\n                              pathname: \"/healthDetails\",\r\n                              allProps: {\r\n                                personal: data[\"personal\"],\r\n                                health: data[\"health\"],\r\n                              },\r\n                            }}\r\n                          >\r\n                            <td>View</td>\r\n                          </NavLink>\r\n                        </tr>\r\n                      );\r\n                    }\r\n                    if (\r\n                      data[\"personal\"][\"remark\"] == \"critical\" &&\r\n                      sessionStorage.getItem(\"button\") == \"critical\" &&\r\n                      this.state.studentslist != null\r\n                    ) {\r\n                      countcrt++;\r\n                      return (\r\n                        <tr>\r\n                          <td>{data[\"personal\"][\"name\"]}</td>\r\n                          <td>{data[\"personal\"][\"email\"]}</td>\r\n                          <td>{data[\"personal\"][\"email\"]}</td>\r\n                          <td>{data[\"personal\"][\"phone\"]}</td>\r\n                          <td className={css.redcolor}>\r\n                            {data[\"personal\"][\"remark\"]}\r\n                          </td>\r\n                          <NavLink\r\n                            onClick={\r\n                              (() =>\r\n                                sessionStorage.setItem(\r\n                                  \"wifi\",\r\n                                  data[\"personal\"][\"wifi\"]\r\n                                ),\r\n                              sessionStorage.setItem(\r\n                                \"info\",\r\n                                JSON.stringify(data[\"personal\"])\r\n                              ))\r\n                            }\r\n                            to={{\r\n                              pathname: \"/healthDetails\",\r\n                              allProps: {\r\n                                personal: data[\"personal\"],\r\n                                health: data[\"health\"],\r\n                              },\r\n                            }}\r\n                          >\r\n                            <td>View</td>\r\n                          </NavLink>\r\n                        </tr>\r\n                      );\r\n                    }\r\n                    if (\r\n                      sessionStorage.getItem(\"button\") == \"critical\" &&\r\n                      countcrt == 0 &&\r\n                      count == this.state.studentslist.length\r\n                    ) {\r\n                      countcrt++;\r\n                      return (\r\n                        <div>\r\n                          <h3 class=\"jumbotron text-center bg-warning\">\r\n                            All Are good :) No Critical Data Found\r\n                          </h3>\r\n                        </div>\r\n                      );\r\n                    }\r\n                    if (\r\n                      sessionStorage.getItem(\"button\") == \"all\" &&\r\n                      countall == 0\r\n                    ) {\r\n                      countall++;\r\n                      return (\r\n                        <div>\r\n                          <h3 class=\"jumbotron text-center bg-warning\">\r\n                            Data Is Not Available :)\r\n                          </h3>\r\n                        </div>\r\n                      );\r\n                    }\r\n                  })\r\n                : null}\r\n            </tbody>\r\n          </table>\r\n          <Box class=\"d-flex justify-content-center\">\r\n            {!this.state.loaded ? (\r\n              <CircularProgress size={50} color=\"primary\" thickness={4} />\r\n            ) : null}\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Allcases;\r\n","import { Typography, Button } from \"@material-ui/core\";\r\nimport styles from \"./mystyle.module.css\";\r\nimport { DateRangePicker } from \"react-dates\";\r\nimport \"react-dates/initialize\";\r\nimport \"react-dates/lib/css/_datepicker.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Allcases from \"./Allcases\";\r\nimport { useHistory, NavLink } from \"react-router-dom\";\r\nimport dateformat from \"dateformat\";\r\nimport Allcasess from \"./Allcases\";\r\nimport firebase, { firebaseAuth } from \"../firebase\";\r\n\r\nimport React, { Component, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let date = new Date();\r\n    this.state = {\r\n      studentslist: [],\r\n      sDate: date,\r\n      pres: [],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.sDate > new Date()) {\r\n      alert(\"date should not exide than today\");\r\n      this.setState({ sDate: new Date() });\r\n    }\r\n    sessionStorage.setItem(\r\n      \"date\",\r\n      dateformat(this.state.sDate.toString(), \"dd-mm-yyyy\")\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"jumbotron text-center bg-warning\">\r\n          <h3>TATA CUNSULTANCY SERVICES</h3>\r\n          <h2>welcome admin</h2>\r\n\r\n          <DatePicker\r\n            className={styles.datep}\r\n            selected={this.state.sDate}\r\n            onChange={(date) => this.setState({ sDate: date })}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <div class=\"jumbotron text-center bg-red\">\r\n            <NavLink\r\n              class=\"btn btn-danger btn-lg\"\r\n              onClick={() => sessionStorage.setItem(\"button\", \"critical\")}\r\n              to={{\r\n                pathname: \"/allcases\",\r\n\r\n                aboutProps: {\r\n                  date: dateformat(this.state.sDate.toString(), \"dd-mm-yyyy\"),\r\n                  button: \"critical\",\r\n                },\r\n              }}\r\n            >\r\n              Critical Cases\r\n            </NavLink>\r\n            <p> </p>\r\n            <NavLink\r\n              class=\"btn btn-primary btn-lg\"\r\n              onClick={() => sessionStorage.setItem(\"button\", \"all\")}\r\n              to={{\r\n                pathname: \"/allcases\",\r\n                aboutProps: {\r\n                  date: dateformat(this.state.sDate, \"dd-mm-yyyy\"),\r\n                  button: \"all\",\r\n                  // allusers: array2,\r\n                },\r\n              }}\r\n            >\r\n              All Cases\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n        <div class=\"jumbotron text-center bg-red\">\r\n          <Button\r\n            class=\"btn btn-primary bg-success\"\r\n            onClick={() => {\r\n              firebase\r\n                .auth()\r\n                .signOut()\r\n                .then(function () {\r\n                  // Sign-out successful.\r\n                })\r\n                .catch(function (error) {\r\n                  // An error happened.\r\n                });\r\n            }}\r\n          >\r\n            LogOut\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default dashboard;\r\n","import React, { useState } from \"react\";\r\nimport { firebaseAuth } from \"../firebase\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Authentication = (props) => {\r\n  const [loggedin, setloggedin] = useState(null);\r\n  firebaseAuth.onAuthStateChanged((user) => {\r\n    if (user) {\r\n      setloggedin(true);\r\n    } else {\r\n      setloggedin(false);\r\n    }\r\n  });\r\n  if (props.nonAuthentication) {\r\n    \r\n    if (loggedin == null) {\r\n      return \"Loading...\";\r\n    } else if (!loggedin) {\r\n      return props.children;\r\n    } else if (loggedin) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  } else {\r\n    if (loggedin == null) {\r\n      return \"Loading...\";\r\n    } else if (loggedin) {\r\n      return props.children;\r\n    } else if (!loggedin) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n  }\r\n};\r\n\r\nexport default Authentication;\r\n","import React from \"react\";\r\nimport firebase from \"../firebase\";\r\n\r\n//Calling Bootstrap 4.5 css\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport css from \"./mystyle.module.css\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\n//Calling Firebase config setting to call the data\r\n\r\nclass healthDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { studentslist: [], encrypt_value: [], encrypt_key: [] };\r\n    this.decrypt = this.decrypt.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id =\r\n      \"hitman/\" +\r\n      sessionStorage.getItem(\"uid\") +\r\n      \"/health/\" +\r\n      sessionStorage.getItem(\"date\");\r\n\r\n    firebase\r\n      .database()\r\n      .ref(id)\r\n      .orderByKey()\r\n      .on(\"value\", (snapshot) => {\r\n        let studentlist = [];\r\n        snapshot.forEach((snap) => {\r\n          // snap.val() is the dictionary with all your keys/values from the 'students-list' path\r\n          studentlist.push(snap.val());\r\n        });\r\n        this.setState({ studentslist: studentlist });\r\n        console.log(sessionStorage.getItem(\"info\"));\r\n      });\r\n  }\r\n  decrypt(props) {\r\n    var integer_value = parseInt(props);\r\n    var key = integer_value % 10;\r\n    var value = parseInt(integer_value / 100);\r\n\r\n    switch (key) {\r\n      case 0:\r\n        for (var num = 5; num < 500; num++) {\r\n          if (num * num - num - 10 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      case 1:\r\n        for (var num = 5; num < 500; num++) {\r\n          if (num * num - num * 2 - 1 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      case 2:\r\n        for (var num = 0; num < 5000; num++) {\r\n          if (num * num - num - 1 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      case 3:\r\n        for (var num = 0; num < 5000; num++) {\r\n          if (num * 3 * num - num - 1 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      case 4:\r\n        for (var num = 0; num < 5000; num++) {\r\n          if (100 * num - num - 1 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      case 5:\r\n        for (var num = 0; num < 5000; num++) {\r\n          if (num * num - num + 86 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      case 6:\r\n        for (var num = 5; num < 500; num++) {\r\n          if (num * num - num - 1 + num * 3 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      case 7:\r\n        for (var num = 5; num < 500; num++) {\r\n          if (num * num - num - 2 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      case 8:\r\n        for (var num = 5; num < 500; num++) {\r\n          if (num * num - num - 3 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      case 9:\r\n        for (var num = 5; num < 500; num++) {\r\n          if (num * num - num - 4 == value) {\r\n            return num.toString();\r\n            break;\r\n          }\r\n        }\r\n\r\n        break;\r\n      default:\r\n        return value.toString();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const obj = JSON.parse(sessionStorage.getItem(\"info\"));\r\n    console.log(obj);\r\n    var bp_array;\r\n    var value_ = \"\";\r\n\r\n    return (\r\n      <div className=\"MainDiv\">\r\n        <br></br>\r\n        <Box class=\"d-flex justify-content-around\">\r\n          <img\r\n            style={{ width: 150 }}\r\n            src={obj.profile_image}\r\n            alt=\"...\"\r\n            class=\"rounded float-left\"\r\n          ></img>\r\n\r\n          <Box>\r\n            <div class=\"d-flex flex-column\">\r\n              <div class=\"p-2\">\r\n                <div class=\"font-weight-bold\">EID : {obj.EID}</div>{\" \"}\r\n              </div>\r\n              <div class=\"p-2\">Name : {obj.name}</div>\r\n              <div class=\"p-2\">Email : {obj.email}</div>\r\n              <div class=\"p-2\">Phone : {obj.phone}</div>\r\n            </div>\r\n          </Box>\r\n          <Box>\r\n            <div class=\"d-flex flex-column\">\r\n              <div class=\"p-2\">Blood Group : {obj.blood_group}</div>\r\n              <div class=\"p-2\">Birth Date : {obj.birth_date}</div>\r\n              <div class=\"p-2\">Weight : {obj.weight} kgs</div>\r\n              <div class=\"p-2\">Height : {obj.height} cm</div>\r\n            </div>\r\n          </Box>\r\n        </Box>\r\n\r\n        <div class=\"d-flex justify-content-around\">\r\n          <p class=\"font-weight-bold\">\r\n            {\" \"}\r\n            {\"Analysis for \" + sessionStorage.getItem(\"date\")}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <table id=\"example\" class=\"display table\">\r\n            <thead class=\"thead-dark\">\r\n              <tr>\r\n                <th>Time</th>\r\n                <th>Temperature (Celsius)</th>\r\n                <th>Blood Pressure (mmHg)</th>\r\n                <th>Sugar Level (mg/dl)</th>\r\n                <th>Heamoglobin (g/dl)</th>\r\n                <th>Heart Rate (BPM)</th>\r\n                <th>Conclusion</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.studentslist.reverse().map((data) => {\r\n                {\r\n                  bp_array = data.blood_pressure.split(\"/\");\r\n                }\r\n                return data.remark == \"normal\" ? (\r\n                  <tr>\r\n                    {}\r\n                    <td>{data.time}</td>\r\n                    <td>{this.decrypt(data.temp)}</td>\r\n                    <td>\r\n                      {(bp_array = data.blood_pressure.split(\"/\"))}\r\n                      {this.decrypt(bp_array[0])}/{this.decrypt(bp_array[1])}\r\n                    </td>\r\n                    <td>{this.decrypt(data.sugar)}</td>\r\n                    <td>{this.decrypt(data.hb)}</td>\r\n                    <td>{this.decrypt(data.bps)}</td>\r\n                    <td>{data.conclusion}</td>\r\n                  </tr>\r\n                ) : (\r\n                  <tr className={css.redcolor}>\r\n                    <td>{data.time}</td>\r\n                    <td>{this.decrypt(data.temp)}</td>\r\n                    <td>\r\n                      {this.decrypt(bp_array[0])}/{this.decrypt(bp_array[1])}\r\n                    </td>\r\n                    <td>{this.decrypt(data.sugar)}</td>\r\n                    <td>{this.decrypt(data.hb)}</td>\r\n                    <td>{this.decrypt(data.bps)}</td>\r\n                    <td>{data.conclusion}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default healthDetails;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Login from \"./Pages/login\";\nimport Dashboad from \"./Pages/dashboard\";\nimport Authentication from \"./Componentes/Authentication\";\nimport Allcases from \"./Pages/Allcases\";\nimport HealthDetails from \"./Pages/healthDetails\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Authentication>\n          <Dashboad />\n        </Authentication>\n      </Route>\n      <Route exact path=\"/allcases\">\n        <Allcases />\n      </Route>\n      <Route exact path=\"/healthDetails\">\n        <HealthDetails />\n      </Route>\n\n      <Route exact path=\"/login\">\n        <Authentication nonAuthentication={true}>\n          <Login />\n        </Authentication>\n      </Route>\n      <Route path=\"*\">\n        <Authentication nonAuthentication={true}>\n          <Login />\n        </Authentication>\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\n\r\nconst rootreducer = combineReducers({\r\n  DEFAULT: \"HELLOW WORLD\",\r\n});\r\nexport default rootreducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport rootreducer from \"./Componentes/Reducers/rootreducer\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { pink, blueGrey } from \"@material-ui/core/colors\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Login from \"./Pages/login\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootreducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: pink,\n    secondary: blueGrey,\n  },\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bigblue\":\"mystyle_bigblue__2a0S3\",\"textcolor\":\"mystyle_textcolor__1H05b\",\"btn\":\"mystyle_btn__UM236\",\"btn2\":\"mystyle_btn2__3BaNq\",\"datepicker\":\"mystyle_datepicker__3leZI\",\"datep\":\"mystyle_datep__3lcWd\",\"redcolor\":\"mystyle_redcolor__26okT\"};"],"sourceRoot":""}